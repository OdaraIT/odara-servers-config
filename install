#!/usr/bin/env bash

if [ "$EUID" -eq 0 ]; then
  sudo apt install -y git curl jq stow ripgrep perl ruby-full build-essential clang

  echo "Installing Neovim globally"

  NVIM_URL="https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.tar.gz"
  NVIM_DEST="/opt/nvim"
  NVIM_TAR="nvim-linux-x86_64.tar.gz"
  NVIM_TMP="/opt/nvim-linux-x86_64"

  curl -LO "${NVIM_URL}"
  sudo rm -rf "${NVIM_DEST}"
  sudo tar -C /opt -xzf "${NVIM_TAR}"
  sudo mv "${NVIM_TMP}" "${NVIM_DEST}"
  sudo rm -rf "${NVIM_TAR}"

  /opt/nvim/bin/nvim --version

  ENV_FILE="/etc/environment"
  NVIM_PATH="/opt/nvim/bin"

  if grep -qE "^PATH=.*${NVIM_PATH}" "${ENV_FILE}"; then
    echo "O caminho ${NVIM_PATH} já está na variável PATH."
  else
    echo "Adicionando ${NVIM_PATH} à variável PATH..."

    sudo sed -i "/^PATH=/ s|\"$|:${NVIM_PATH}\"|" "${ENV_FILE}"

    echo "Atualização concluída. Verifique com: cat ${ENV_FILE}"
  fi

  if ! grep -q "^ODARA_TYPE=" "${ENV_FILE}"; then
    echo "ODARA_TYPE=servers" | sudo tee -a "${ENV_FILE}" >/dev/null

    echo "Variável ODARA_TYPE=servers adicionada ao ${ENV_FILE}."
  else
    echo "A variável ODARA_TYPE já existe no ${ENV_FILE}."
  fi
fi

if [ ! -d "$HOME/.fzf" ]; then
  echo "Instalando fzf..."
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install --all
else
  echo "Atualizando fzf..."
  cd ~/.fzf && git pull && ./install --all
fi

NERD_FONT_DIR="$HOME/.local/share/fonts"
FIRA_FONT_MD5="$HOME/.fonts_fira_code"
JETBRAINS_FONT_MD5="$HOME/.fonts_jetbrains_mono"

mkdir -p "$NERD_FONT_DIR"
FIRA_FONT_URL="https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FiraCode.zip"
JETBRAINS_FONT_URL="https://github.com/ryanoasis/nerd-fonts/releases/latest/download/JetBrainsMono.zip"

wget -O "$NERD_FONT_DIR/FiraCode.zip" "$FIRA_FONT_URL"
unzip -o "$NERD_FONT_DIR/FiraCode.zip" -d "$NERD_FONT_DIR"
find "$NERD_FONT_DIR" -name "FiraCode*" -type f -exec md5sum {} \; >"$FIRA_FONT_MD5"

wget -O "$NERD_FONT_DIR/JetBrainsMono.zip" "$JETBRAINS_FONT_URL"
unzip -o "$NERD_FONT_DIR/JetBrainsMono.zip" -d "$NERD_FONT_DIR"
find "$NERD_FONT_DIR" -name "JetBrainsMono*" -type f -exec md5sum {} \; >"$JETBRAINS_FONT_MD5"

fc-cache -fv

if [ -d "$HOME/.SpaceVim" ]; then
  echo "Removing SpaceVim..."

  curl -sLf https://spacevim.org/install.sh | bash -s -- --uninstall

  rm -rf "${HOME}/.SpaceVim" "${HOME}/.SpaceVim.d"

  if [ -L "${HOME}/.nvim" ]; then
    unlink "${HOME}/.nvim"
  fi

  if [ -L "${HOME}/.vim" ]; then
    unlink "${HOME}/.vim"
  fi
fi

echo "Removing old configurations..."

FILES=(
  "${HOME}/.bashrc"
  "${HOME}/.bash_aliases"
  "${HOME}/.bash_custom"
  "${HOME}/.bash_logout"
  "${HOME}/.bash_ps1"
  "${HOME}/.config/nvim"
  "${HOME}/.config/vim"
  "${HOME}/.vim"
  "${HOME}/.vimrc"
)

for FILE in "${FILES[@]}"; do
  if [ -L "${FILE}" ]; then
    unlink "${FILE}"
  elif [ -d "${FILE}" ] || [ -f "${FILE}" ]; then
    rm -rf "${FILE}"
  fi
done

echo "Configuring Odara repository..."

if [ -d "$HOME/.odara" ]; then
  echo "Removing existing Odara repository..."

  rm -rf "$HOME/.odara"
fi

git clone https://github.com/OdaraIT/servers.git "$HOME/.odara"

echo "Applying stow to Odara repository..."

cd "${HOME}/.odara" || exit

stow bash
stow nvim

echo "Installation completed!"

cd "${HOME}" || exit
